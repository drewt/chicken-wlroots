;; Copyright 2019 Drew Thoreson
;;
;; Permission is hereby granted, free of charge, to any person obtaining a copy
;; of this software and associated documentation files (the "Software"), to
;; deal in the Software without restriction, including without limitation the
;; rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
;; sell copies of the Software, and to permit persons to whom the Software is
;; furnished to do so, subject to the following conditions:
;;
;; The above copyright notice and this permission notice shall be included in
;; all copies or substantial portions of the Software.
;;
;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
;; IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
;; FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
;; AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
;; LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
;; FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
;; IN THE SOFTWARE.

(foreign-declare "#include <wlr/types/wlr_box.h>")
(include "wlroots-types.scm")

(module (wlr types wlr-box)
        (make-wlr-box
         wlr-box-x
         wlr-box-y
         wlr-box-width
         wlr-box-height

         wlr-fbox-x
         wlr-fbox-y
         wlr-fbox-width
         wlr-fbox-height

         wlr-box-closest-point
         wlr-box-intersection
         wlr-box-contains-point?
         wlr-box-empty?
         wlr-box-transform
         wlr-box-rotated-bounds
         ;wlr-box-from-pixman-box32
         )
  (import (scheme)
          (chicken base)
          (chicken gc)
          (chicken memory))
  (include "ffi-helpers.scm")

  (bind-rename wlr_box_intersection %wlr-box-intersection)
  (bind-rename wlr_box_contains_point wlr-box-contains-point?)
  (bind-rename wlr_box_empty wlr-box-empty?)
  (bind-rename wlr_box_transform %wlr-box-transform)
  (bind-rename wlr_box_rotated_bounds %wlr-box-rotated-bounds)
  (bind-file "include/bind/wlr/types/wlr_box.h")

  ; The default constructor doesn't register a finalizer, so we have to do it
  ; ourselves. As far as I know this is the only way to rename the default
  ; constructor generated by bind.
  (define %make-wlr-box make-wlr-box)
  (set! make-wlr-box
    (lambda (x y w h)
      (let ((box (%make-wlr-box x y w h)))
        (set-finalizer! box free)
        box)))

  (define %make-wlr-fbox make-wlr-fbox)
  (set! make-wlr-fbox
    (lambda (x y w h)
      (let ((box (%make-wlr-fbox x y w h)))
        (set-finalizer! box free)
        box)))

  (define (wlr-box-intersection a b)
    (let* ((box (make-wlr-box 0 0 0 0))
           (r (%wlr-box-intersection box a b)))
      (values r box)))

  (define (wlr-box-transform box transform width height)
    (let ((dst (make-wlr-box 0 0 0 0)))
      (%wlr-box-transform dst box transform width height)
      dst))

  (define (wlr-box-rotated-bounds box rotation)
    (let ((dst (make-wlr-box 0 0 0 0)))
      (%wlr-box-rotated-bounds dst box rotation)
      dst)))
